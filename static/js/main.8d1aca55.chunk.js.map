{"version":3,"sources":["components/app/styles.ts","components/app/index.tsx","components/notification/styles.ts","components/notification/index.tsx","index.tsx"],"names":["AppContainer","styled","main","position","top","left","width","height","display","alignItems","justifyContent","backgroundColor","H1","h1","fontSize","textAlign","marginBottom","textTransform","Jumbotron","section","padding","borderRadius","boxShadow","Button","input","invalid","button","all","boxSizing","color","outline","transition","formValidationSchema","yup","shape","email","required","App","React","notificatedEmail","setNotificatedEmail","formik","useFormik","initialValues","onSubmit","setValues","setTouched","setTimeout","validationSchema","validateOnChange","validateOnBlur","notificationTransitions","useTransition","from","transform","opacity","enter","leave","ANotification","animated","Notification","map","item","props","key","style","Form","noValidate","handleSubmit","Group","Control","type","name","value","values","onChange","handleChange","placeholder","isValid","touched","errors","isInvalid","Feedback","NotificationContainer","div","Alert","variant","Heading","Link","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d1aca55.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const AppContainer = styled.main({\r\n    position: 'absolute',\r\n    top: '0',\r\n    left: '0',\r\n    width: '100vw',\r\n    height: '100vh',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#F7F7F7',\r\n});\r\n\r\nexport const H1 = styled.h1({\r\n    fontSize: '24px',\r\n    textAlign: 'center',\r\n    marginBottom: '2rem',\r\n    textTransform: 'uppercase',\r\n});\r\n\r\nexport const Jumbotron = styled.section({\r\n    padding: '2rem 2.5rem',\r\n    borderRadius: '.25rem',\r\n    backgroundColor: '#fff',\r\n    boxShadow: '0 0 10px rgba(0,0,0,0.2), 0 0 10px rgba(0,0,0,.2)',\r\n});\r\n\r\ninterface IFormControlProps {\r\n    invalid?: boolean;\r\n}\r\n\r\nexport const FormControl = styled.input<IFormControlProps>`\r\n    all: unset;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    border: 1px solid;\r\n    border-color: ${({ invalid }) => !!invalid ? '#dc3545' : '#ced4da'};\r\n    border-radius: .25rem;\r\n    padding: .5rem;\r\n    margin-bottom: 1rem;\r\n`;\r\n\r\nexport const Button = styled.button({\r\n    all: 'unset',\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: '.5rem 1rem',\r\n    color: '#fff',\r\n    outline: 'none',\r\n    fontSize: '1.2rem',\r\n    backgroundColor: '#007bff',\r\n    borderRadius: '.25rem',\r\n    transition: 'all 250ms ease',\r\n    ':hover': {\r\n        backgroundColor: '#0069D9',\r\n    },\r\n    ':active': {\r\n        outline: 'none',\r\n    },\r\n    ':focus': {\r\n        outline: 'none',\r\n    }\r\n});","import * as yup from 'yup';\r\nimport * as React from 'react';\r\nimport { Notification } from '../';\r\nimport { useFormik } from 'formik';\r\nimport { Form } from 'react-bootstrap';\r\nimport { useTransition, animated } from 'react-spring';\r\nimport { AppContainer, H1, Jumbotron, Button } from './styles';\r\n\r\ninterface IAppProps { }\r\n\r\nconst formValidationSchema = yup.object().shape({\r\n    email: yup.string()\r\n        .email('Az email cím nem valid!')\r\n        .required('Email cím megadása kötelező!')\r\n});\r\n\r\ninterface IFormValues {\r\n    email: string;\r\n}\r\n\r\nconst App: React.FC<IAppProps> = () => {\r\n\r\n    const [notificatedEmail, setNotificatedEmail] = React.useState<string | null>(null);\r\n\r\n    const formik = useFormik<IFormValues>({\r\n        initialValues: {\r\n            email: ''\r\n        },\r\n        onSubmit: ({ email }) => {\r\n            setNotificatedEmail(email);\r\n            formik.setValues({ email: '' }, false);\r\n            formik.setTouched({}, false);\r\n            setTimeout(() => setNotificatedEmail(null), 4500);\r\n        },\r\n        validationSchema: formValidationSchema,\r\n        validateOnChange: true,\r\n        validateOnBlur: false,\r\n    });\r\n\r\n    const notificationTransitions = useTransition(!!notificatedEmail, null, {\r\n        from: { transform: 'translate3d(0,-200px,0)', opacity: '0' },\r\n        enter: { transform: 'translate3d(0,0px,0)', opacity: '1' },\r\n        leave: { transform: 'translate3d(0,-200px,0)', opacity: '0' }\r\n    });\r\n\r\n    const ANotification = animated(Notification);\r\n\r\n    return (\r\n        <AppContainer>\r\n            {notificationTransitions.map(({ item, props, key }) =>\r\n                item ? <ANotification key={key} style={props} email={notificatedEmail} /> : null\r\n            )}\r\n            <Jumbotron>\r\n                <H1>{'Iratkozz fel hírlevelünkre!'}</H1>\r\n                <Form noValidate onSubmit={formik.handleSubmit}>\r\n                    <Form.Group>\r\n                        <Form.Control\r\n                            type={'text'}\r\n                            name={'email'}\r\n                            value={formik.values.email}\r\n                            onChange={formik.handleChange}\r\n                            placeholder={'Adja meg email címét'}\r\n                            isValid={!!(formik.touched.email && !formik.errors.email)}\r\n                            isInvalid={!!(formik.touched.email && !!formik.errors.email)}\r\n                        />\r\n                        <Form.Control.Feedback type={'invalid'}>{formik.errors.email}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Button type={'submit'}>{'Feliratkozás'}</Button>\r\n                </Form>\r\n            </Jumbotron>\r\n        </AppContainer>\r\n    );\r\n}\r\n\r\nexport default App;","import styled from 'styled-components';\r\n\r\nexport const NotificationContainer = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n`;","import * as React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { NotificationContainer } from './styles';\r\n\r\ninterface INotificationProps {\r\n    email: string | null;\r\n}\r\n\r\nconst Notification: React.FC<INotificationProps & React.HtmlHTMLAttributes<HTMLDivElement>> = ({ email, style }) => {\r\n\r\n    return (\r\n        <NotificationContainer style={style}>\r\n            <Alert variant={'success'}>\r\n                <Alert.Heading>{'Köszönjük a feliratkozást!'}</Alert.Heading>\r\n                <p>\r\n                    {'Mostantól heti rendszereséggel a(z) '}\r\n                    <Alert.Link href={'#'}>{email}</Alert.Link>\r\n                    {' email címen értesülhetsz legújabb ajánlatainkról.'}\r\n                </p>\r\n            </Alert>\r\n        </NotificationContainer>\r\n    );\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './components';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}